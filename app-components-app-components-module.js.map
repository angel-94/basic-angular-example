{"version":3,"sources":["webpack:///./src/app/app-components/app-components.component.css","webpack:///./src/app/app-components/app-components.component.html","webpack:///./src/app/app-components/app-components.component.ts","webpack:///./src/app/app-components/app-components.module.ts","webpack:///./src/app/app-components/components-routing.module.ts","webpack:///./src/app/app-components/help/help.component.css","webpack:///./src/app/app-components/help/help.component.html","webpack:///./src/app/app-components/help/help.component.ts","webpack:///./src/app/app-components/home/home.component.css","webpack:///./src/app/app-components/home/home.component.html","webpack:///./src/app/app-components/home/home.component.ts","webpack:///./src/app/app-components/menu/menu.component.css","webpack:///./src/app/app-components/menu/menu.component.html","webpack:///./src/app/app-components/menu/menu.component.ts","webpack:///./src/app/app-components/roles/roles-tables/roles-tables.component.css","webpack:///./src/app/app-components/roles/roles-tables/roles-tables.component.html","webpack:///./src/app/app-components/roles/roles-tables/roles-tables.component.ts","webpack:///./src/app/app-components/roles/roles.component.css","webpack:///./src/app/app-components/roles/roles.component.html","webpack:///./src/app/app-components/roles/roles.component.ts","webpack:///./src/app/app-components/user/user-tables/user-tables.component.css","webpack:///./src/app/app-components/user/user-tables/user-tables.component.html","webpack:///./src/app/app-components/user/user-tables/user-tables.component.ts","webpack:///./src/app/app-components/user/user.component.css","webpack:///./src/app/app-components/user/user.component.html","webpack:///./src/app/app-components/user/user.component.ts","webpack:///./src/app/service/common-service.service.ts","webpack:///./src/app/service/roles-service.service.ts"],"names":[],"mappings":"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","file":"app-components-app-components-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<app-menu></app-menu>\\n<br><br>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-app-components',\n  templateUrl: './app-components.component.html',\n  styleUrls: ['./app-components.component.css']\n})\nexport class AppComponentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ComponentsRoutingModule} from './components-routing.module';\nimport {AppComponentsComponent} from './app-components.component';\nimport {HomeComponent} from './home/home.component';\nimport {UserComponent} from './user/user.component';\nimport {RolesComponent} from './roles/roles.component';\nimport {HelpComponent} from './help/help.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {CustomMaterialModule} from \"../custom-material/custom-material.module\";\nimport {MenuComponent} from './menu/menu.component';\nimport {RolesTablesComponent} from './roles/roles-tables/roles-tables.component';\nimport {UserTablesComponent} from './user/user-tables/user-tables.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ComponentsRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CustomMaterialModule\n    ],\n    declarations: [\n        AppComponentsComponent,\n        HomeComponent,\n        UserComponent,\n        RolesComponent,\n        HelpComponent,\n        MenuComponent,\n        RolesTablesComponent,\n        UserTablesComponent]\n})\nexport class AppComponentsModule {\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {UserComponent} from \"./user/user.component\";\nimport {RolesComponent} from \"./roles/roles.component\";\nimport {HelpComponent} from \"./help/help.component\";\nimport {AppComponentsComponent} from \"./app-components.component\";\nimport {RolesTablesComponent} from \"./roles/roles-tables/roles-tables.component\";\nimport {UserTablesComponent} from \"./user/user-tables/user-tables.component\";\n\nconst APP_COMP: Routes = [\n  {\n    path: '',\n    component: AppComponentsComponent,\n    children: [\n      {\n        path: 'home',\n        component: HomeComponent\n      },\n      {\n        path: 'user',\n        component: UserComponent,\n        children: [\n          {\n            path: 'user-tables',\n            component: UserTablesComponent\n          }\n        ]\n      },\n      {\n        path: 'roles',\n        component: RolesComponent,\n        children: [\n          {\n            path: 'roles-tables',\n            component: RolesTablesComponent\n          }\n        ]\n      },\n      {\n        path: 'help',\n        component: HelpComponent\n      }\n    ]\n  },\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(APP_COMP)\n  ], exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class ComponentsRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  Comandos b&aacute;sicos para inicializar con angular y spring\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help',\n  templateUrl: './help.component.html',\n  styleUrls: ['./help.component.css']\n})\nexport class HelpComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-full-width {\\n    width: 100%;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n\\n    <mat-card class=\\\"mat-elevation-z2\\\">\\n        <mat-card-title>\\n            <mat-toolbar>\\n                <mat-toolbar-row>\\n                    <span>Test SpeechRecognition </span>\\n                </mat-toolbar-row>\\n            </mat-toolbar>\\n        </mat-card-title>\\n\\n        <mat-card-content class=\\\"mt-4\\\">\\n            <p>Mensaje: {{message}}</p>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <button mat-raised-button class=\\\"mr-3\\\" [disabled]=\\\"started\\\" (click)=\\\"start()\\\">Iniciar</button>\\n                    <button mat-raised-button [disabled]=\\\"!started\\\" (click)=\\\"stop()\\\">Terminar</button>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"mt-4 border-bottom\\\">\\n\\n                <form action=\\\"\\\" [formGroup]=\\\"frmSpeechDemo\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-4\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <input matInput placeholder=\\\"Please say something!!!\\\"\\n                                       formControlName=\\\"speech\\\"\\n                                       (click)=\\\"valueForSpeechField()\\\">\\n                                <mat-icon matSuffix>mic</mat-icon>\\n                            </mat-form-field>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <button mat-raised-button type=\\\"submit\\\">Reset</button>\\n                    </div>\\n\\n                </form>\\n\\n            </div>\\n\\n\\n            <div class=\\\"row mt-5\\\">\\n\\n                <div class=\\\"col\\\">\\n                    <p>Final form value </p>\\n                    {{finalMessage | json}}\\n                </div>\\n\\n            </div>\\n\\n\\n        </mat-card-content>\\n\\n    </mat-card>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {SpeechRecognitionService} from \"@kamiazya/ngx-speech-recognition\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css'],\n    providers: [\n        SpeechRecognitionService,\n    ]\n})\nexport class HomeComponent implements OnInit {\n\n    public started = false;\n    public message = '';\n\n    frmSpeechDemo: FormGroup;\n    finalMessage: any;\n\n    constructor(private speechService: SpeechRecognitionService,) {\n    }\n\n    ngOnInit() {\n\n        this.initFrmSpeechDemo();\n        console.log('HomeComponent --> ', this.speechService);\n        this.speechService.onstart = (e) => {\n            console.log('onstart', e);\n        };\n        this.speechService.onresult = (e) => {\n            this.message = e.results[0].item(0).transcript;\n            console.log('HomeComponent:onresult ---> ', this.message, e);\n        };\n\n    }\n\n    start() {\n        this.started = true;\n        this.speechService.start();\n    }\n\n    stop() {\n        this.started = false;\n        this.speechService.stop();\n    }\n\n    initFrmSpeechDemo() {\n        this.frmSpeechDemo = new FormGroup({\n            speech: new FormControl()\n        })\n    }\n\n    onSubmit() {\n        console.log('form value --> ', this.frmSpeechDemo.value);\n        this.finalMessage = this.frmSpeechDemo.value;\n        this.frmSpeechDemo.reset();\n    }\n\n    valueForSpeechField() {\n        this.speechService.start();\n        this.speechService.onresult = (e) => {\n            let message = e.results[0].item(0).transcript;\n            this.frmSpeechDemo.controls['speech'].setValue(message);\n            if (e.results[0].isFinal) {\n                this.speechService.stop();\n                alert('Speech Recognition is ending. Please try again!');\n            }\n            console.log('HomeComponent:onresult ---> ', message, e);\n        };\n    }\n\n}\n","module.exports = \".example-icon {\\n  padding: 0 14px;\\n}\\n\\n.example-spacer {\\n  flex: 1 1 auto;\\n}\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n.fixed-header {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  z-index: 2;\\n  width: 100%  !important;\\n}\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"fixed-header\\\">\\n    <mat-toolbar-row>\\n        <span style=\\\"cursor: pointer;\\\" (click)=\\\"home()\\\">Meltsan</span>\\n        <!--<span><img src=\\\"../../../assets/img/logo.png\\\"></span>-->\\n        <span class=\\\"example-fill-remaining-space\\\"></span>\\n        <span class=\\\"align-center\\\"></span>\\n        <span class=\\\"example-spacer\\\"></span>\\n\\n        <!--<button mat-button [matMenuTriggerFor]=\\\"home\\\">-->\\n        <!--<mat-icon>library_books</mat-icon>-->\\n        <!--<span>Home</span>-->\\n        <!--</button>-->\\n\\n\\n        <button mat-button [matMenuTriggerFor]=\\\"roles\\\">\\n            <mat-icon>rowing</mat-icon>\\n            <span>Roles</span>\\n        </button>\\n        <mat-menu #roles=\\\"matMenu\\\">\\n            <button mat-menu-item [routerLink]=\\\"['roles', 'roles-tables']\\\">\\n                <mat-icon>perm_identity</mat-icon>\\n                <span>Roles</span>\\n            </button>\\n        </mat-menu>\\n\\n        <button mat-button [matMenuTriggerFor]=\\\"help\\\">\\n            <mat-icon>help_outline</mat-icon>\\n            <span>Ayuda</span>\\n        </button>\\n        <mat-menu #help=\\\"matMenu\\\">\\n            <button mat-menu-item [routerLink]=\\\"['help']\\\">\\n                <mat-icon>help_outline</mat-icon>\\n                <span>Acerca de</span>\\n            </button>\\n        </mat-menu>\\n\\n        <button mat-button [matMenuTriggerFor]=\\\"user\\\">\\n            <mat-icon>person</mat-icon>\\n            <span>Usuarios</span>\\n        </button>\\n        <mat-menu #user=\\\"matMenu\\\">\\n            <button mat-menu-item [routerLink]=\\\"['user', 'user-tables']\\\">\\n                <mat-icon>local_library</mat-icon>\\n                <span>Info de usuarios</span>\\n            </button>\\n            <button mat-menu-item (click)=\\\"logout()\\\">\\n                <mat-icon>arrow_forward</mat-icon>\\n                <span>Cerrar sesi&oacute;n</span>\\n            </button>\\n        </mat-menu>\\n\\n\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n\\n<br>\\n<br>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logout(){\n    this.router.navigate(['login']);\n  }\n\n  home() {\n      this.router.navigate(['app', 'home']);\n  }\n\n}\n","module.exports = \"table {\\n  width: 100%;\\n}\\n\"","module.exports = \"<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"position\\\">\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"weight\\\">\\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"symbol\\\">\\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {RolesServiceService} from \"../../../service/roles-service.service\";\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n@Component({\n  selector: 'app-roles-tables',\n  templateUrl: './roles-tables.component.html',\n  styleUrls: ['./roles-tables.component.css']\n})\nexport class RolesTablesComponent implements OnInit {\n\n  constructor(private serv: RolesServiceService) { }\n\n  ngOnInit() {\n    let responce = this.serv.getAllRoles();\n    console.log(responce);\n  }\n\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Informaci&oacute;n de roles</mat-card-title>\\n    <mat-card-subtitle>Este es un subtitulo</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <router-outlet></router-outlet>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"table {\\n  width: 100%;\\n}\\n\"","module.exports = \"<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n  <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\n\\n  <!-- Position Column -->\\n  <ng-container matColumnDef=\\\"position\\\">\\n    <th mat-header-cell *matHeaderCellDef> No. </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container matColumnDef=\\\"weight\\\">\\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container matColumnDef=\\\"symbol\\\">\\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n\n@Component({\n  selector: 'app-user-tables',\n  templateUrl: './user-tables.component.html',\n  styleUrls: ['./user-tables.component.css']\n})\nexport class UserTablesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title>Informaci&oacute;n de usuarios</mat-card-title>\\n    <mat-card-subtitle>Este es un subtitulo para la info de usuarios</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <router-outlet></router-outlet>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonServiceService {\n\n  constructor() { }\n\n  public static GET_GETWAY_URL(): string{\n    return environment.gatwayUlr;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {CommonServiceService} from \"./common-service.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\nconst url_roles = CommonServiceService.GET_GETWAY_URL;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RolesServiceService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAllRoles() {\n    let url = url_roles + 'www';\n\n    this.http.get(url);\n\n    // .subscribe((response) => {\n    //   console.log(response);\n    // })\n\n  }\n\n}\n"],"sourceRoot":""}